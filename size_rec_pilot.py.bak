# Import the required libraries
from tkinter import *
import pandas as pd
import warnings
warnings.simplefilter(action="ignore", category=DeprecationWarning)
from distutils.log import warn

from flask import Flask
app = Flask(__name__)

import traceback
from flask_cors import CORS

CORS(app)

def getFile():
        """
            Returns POCs Excel workbook from sharepoint as dictionary

            :return: {sheet_name : sheet_content_as_df}
        """
        data_dump = pd.read_excel(r"./size chart input.xlsx" , sheet_name=None )
        return data_dump
@app.route('/getRecommend/<cur_brand>/<cur_size>/<new_brand>',methods=['GET'])
def main(cur_brand,cur_size,new_brand):
    return_val = {
        "cBrand": cur_brand,
        "size":cur_size,
        "nBrand":new_brand,
        "nSize":""
    }
    df_dict = getFile()
    using_brand = cur_brand
    recc_brand = new_brand
    if using_brand == recc_brand:
        print("You have selected same using and reccomendation brand")
    else:
        df_used_brand = df_dict[f'{using_brand}']
        df_recc_brand = df_dict[f'{recc_brand}']
        using_size = float(cur_size)
        using_size = float(using_size)
        using_heeltotoe = df_used_brand.loc[df_used_brand['Brand Size'] == using_size]['Heel to toe (in)']
        using_heel_to_toe = using_heeltotoe.item()
        print(using_heel_to_toe)
        try:
            recc_size = df_recc_brand.loc[df_recc_brand['Heel to toe (in)'] == using_heel_to_toe]['Brand Size']
            lenSeries=len(recc_size)
            indices=range(lenSeries)
            recc_size.index=indices
            reccom_size = recc_size[0]
            return_val['nSize'] = reccom_size
            print("Recommended Size is : " +str(reccom_size))
        except KeyError:
            print("I am in except block")
            idx_low = df_recc_brand['Heel to toe (in)'].sub(using_heel_to_toe).abs().idxmin()
            idx_high = idx_low+1
            df_low_size = df_recc_brand.loc[idx_low]
            brand_size_lower = df_low_size['Brand Size']
            print("If you want tight fit go with  :" + str(brand_size_lower))
            df_high_size = df_recc_brand.loc[idx_high]
            brand_size_high = df_high_size['Brand Size']
            return_val['nSize'] = brand_size_high
            print("If you want slightly loose fit go with  :" +str(brand_size_high))
        finally:
            return return_val

if __name__ == '__main__':
   #app.run(debug = True)
   app.run(host='0.0.0.0', port=1246)